apply plugin: 'maven-publish'
task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    archiveClassifier = 'sources'
    version = versions[ARTIFACT_ID]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
    version = versions[ARTIFACT_ID]
}

def releasesRepoUrl = RELEASE_REPOSITORY_URL
def snapshotsRepoUrl = SNAPSHOT_REPOSITORY_URL
def publishUrl = versions[ARTIFACT_ID].endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
def publishUserName = NEXUS_USERNAME
def publishPassword = NEXUS_PASSWORD

println "-------publish info---------"
println "url: $publishUrl"
println "username: $publishUserName"
println "password: $publishPassword"

publishing {
    repositories {
        maven {
            url = publishUrl
            credentials {
                username = publishUserName
                password = publishPassword
            }
        }
        if (System.getProperty("useLocalMaven", "false").equalsIgnoreCase("true")) {
            maven {
                url = "${rootProject.projectDir}/repo"
            }
        }
    }

    if (project.plugins.hasPlugin("java-library") || project.plugins.hasPlugin("java")) {
        publications {
            ResGuard(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar

                groupId GROUP_ID
                artifactId ARTIFACT_ID
                version versions[ARTIFACT_ID]
            }
        }
    } else {
        throw new GradleScriptException("java-library plugin required")
    }
}